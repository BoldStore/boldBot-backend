// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  facebook_id  String?   @unique
  name         String?
  firebase_uid String    @unique
  profile_pic  String?
  pages        Page[]
  messages     Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Page {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String
  page_access_token String
  page_id           String @unique
  page_name         String
  insta_id          String @unique @default("")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]

  @@map("pages")
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  page   Page   @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId String

  type     String
  question String?

  texts Text[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}

model Text {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
  messageId String  @unique

  key   String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("texts")
}
